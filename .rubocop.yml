# Default https://github.com/bbatsov/rubocop/blob/master/config/default.yml

AllCops:
  Exclude:
    - db/**/*
    - docs/**/*
    - coverage/**/*
    - log/**/*
    - public/**/*
    - tmp/**/*
    - vendor/**/*

Rails:
  Enabled: true

# Key to satisfy default formats, but prefer table
Layout/AlignHash:
  EnforcedHashRocketStyle: key
  EnforcedColonStyle: key

Layout/DefEndAlignment:
  AutoCorrect: true

Layout/EndAlignment:
  AutoCorrect: true

Lint/AssignmentInCondition:
  Enabled: false

Lint/AmbiguousBlockAssociation:
  Enabled: false

Lint/AmbiguousOperator:
  Enabled: false

Metrics/LineLength:
  Enabled: true
  # Change the default 80 chars limit value
  Max: 120
  # If you want the rule only apply to a specific folder/file
  Include:
    - 'app/**/*'
  # If you want the rule not to apply to a specific folder/file
  Exclude:
    - 'db/schema.rb'

Metrics/BlockLength:
  Enabled: true
  # If you want the rule only apply to a specific folder/file
  Include:
    - 'app/**/*'
  # If you want the rule not to apply to a specific folder/file
  Exclude:
    - spec/support/**/*
    - '*_spec.rb'

Metrics/ClassLength:
  Max: 150

# Too short methods lead to extraction of single-use methods, which can make
# the code easier to read (by naming things), but can also clutter the class
Metrics/MethodLength:
  Max: 20
  Exclude:
    - spec/support/**/*
    - '*_spec.rb'

Metrics/ModuleLength:
  Exclude:
    - spec/support/**/*
    - '*_spec.rb'

Metrics/PerceivedComplexity:
  Max: 10
Metrics/CyclomaticComplexity:
  Max: 9

Metrics/AbcSize:
  Max: 30
  Exclude:
    - spec/support/**/*
    - '*_spec.rb'

# We actually prefer nested but the way we've named our modules results in class conflicts so leave this as compact
# but don't autocorrect
Style/ClassAndModuleChildren:
  Enabled: false
  EnforcedStyle: 'compact'
  AutoCorrect: false

Style/FrozenStringLiteralComment:
  # This will disable the rule completely, regardless what other options you put
  Enabled: false

Style/ClassMethods:
  AutoCorrect: true

Style/CollectionMethods:
  AutoCorrect: true

Style/GuardClause:
  Enabled: false

Style/IfUnlessModifier:
  Enabled: false

# Single quotes being faster is hardly measurable and only affects parse time.
# Enforcing double quotes reduces the times where you need to change them
# when introducing an interpolation. Use single quotes only if their semantics
# are needed.
Style/StringLiterals:
  Enabled: false

# We do not need to support Ruby 1.9, so this is good to use.
Style/SymbolArray:
  Enabled: true

Style/Documentation:
  Enabled: false

Style/GuardClause:
  Enabled: false

Style/MultilineBlockChain:
  Enabled: false

Layout/MultilineMethodCallIndentation:
  EnforcedStyle: indented

Style/LambdaCall:
  Enabled: false

Style/AndOr:
  Enabled: false
